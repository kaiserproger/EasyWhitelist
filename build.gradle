buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.github.johnrengelman.shadow" version "7.1.0"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.spongepowered.mixin'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

mixin {
    add sourceSets.main, 'easywhitelist.mixins.refmap.json'
    config 'easywhitelist.mixins.json'

    disableTargetValidator = true
    overwriteErrorLevel = 'error'
}

repositories {
    maven { name 'Jitpack'; url 'https://jitpack.io' }
    maven { name "Permission"; url "https://oss.sonatype.org/content/repositories/snapshots"}
}

archivesBaseName = "${project.mod_id}-mc${project.minecraft_version}"
version = "${project.mod_version}"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

minecraft {
    mappings channel: 'official', version: '1.19.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'recruits'

            args = ['--username', 'kaiserproger']


            mods {
                'recruits' {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'recruits'

            mods {
                'recruits' {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'recruits', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                'easywhitelist' {
                    source sourceSets.main
                }
            }
        }
    }
}


dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.3.0'

    compileOnly 'net.luckperms:api:5.4'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

// Example for how to get properties into the manifest for reading at runtime.
jar {

}

jar.finalizedBy('reobfJar')

artifacts {
    archives shadowJar
}

shadowJar {
    project.configurations.shadow.setTransitive(true)
    configurations = [project.configurations.shadow]
}

reobf {
    shadowJar {}
}

